@page "/BookedResourcePage/{ResourceId}/{Token}"

@using System.Text.Json
@using Microsoft.OData
@using Microsoft.OData.Client
@using Newtonsoft.Json.Serialization
@using Newtonsoft.Json
@using System.Net.Http.Headers
@using FieldServiceT.Models
@using Syncfusion.Blazor.Maps
@using Syncfusion.Blazor.Cards

    <h3>Booked Resource Page</h3>
    <h5>Resource ID: @ResourceId</h5>
<SfCard>
    <CardHeader>
        <p style="text-align:left">@Result</p>
    </CardHeader>
    <CardContent>
        <SfMaps>
            <MapsZoomSettings Enable="true"
                Toolbars='new string[]{"Zoom", "ZoomIn", "ZoomOut", "Pan", "Reset" }'>
            </MapsZoomSettings>
            <MapsLayers>
                <MapsLayer LayerType="ShapeLayerType.OSM"></MapsLayer>
            </MapsLayers>
        </SfMaps>
    </CardContent>
</SfCard>

@code {
    #region
    [Parameter]
    public string ResourceId { get; set; }

    [Parameter]
    public string Token { get; set; }

    [CascadingParameter]
    RouteData RouteData { get; set; }


    string url = "https://eg8pfua3iofsrjt3zb.crm.dynamics.com/api/data/v9.0/bookableresourcebookings/";

    public string Result { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetResource();
    }

    private async Task GetResource()
    {
        {
            string query = $"?$filter=bookableresourcebookingid eq '{ResourceId}'";

            string resourceuri = url + query;

            using (var client = new System.Net.Http.HttpClient())
            {
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", Token);

                var response = await client.GetAsync(new Uri(resourceuri));
                var strjson = await response.Content.ReadAsStringAsync();

                var result = JsonConvert.DeserializeObject<ODataResponse<BookedResource>>(strjson);

                var resource = result.Value.First<BookedResource>();

                Result = resource.Name;
            }
        }
    }
    internal class ODataResponse<T>
    {
        public List<T> Value
        {
            get;
            set;
        }
    }
    #endregion
}
