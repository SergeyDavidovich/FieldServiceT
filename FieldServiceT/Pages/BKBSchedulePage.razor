@page "/BKBSchedulePage"

@*@attribute [Authorize]*@

@using Syncfusion.Blazor.Schedule
@using Microsoft.IdentityModel.Clients.ActiveDirectory
@using FieldServiceT.Models
@using FieldServiceT.Repositories
@using FieldServiceT.Helpers

@inject BookableResourceBooking<BookedResource> bookableResourceBookingService
@inject TokenService tokenService


<h6>BKBSchedulePage</h6>

<div>
    <SfSchedule TValue="Appointment" Readonly="true" Height="650px" SelectedDate="@(new DateTime(2020, 2, 12))">
        <ScheduleEventSettings DataSource="@DataSource"></ScheduleEventSettings>
        <ScheduleViews>
            <ScheduleView Option="View.Day"></ScheduleView>
            <ScheduleView Option="View.Week"></ScheduleView>
            <ScheduleView Option="View.WorkWeek"></ScheduleView>
            <ScheduleView MaxEventsPerRow="2" Option="View.Month"></ScheduleView>
            <ScheduleView Option="View.Agenda" IsSelected="true"></ScheduleView>
        </ScheduleViews>
    </SfSchedule>
</div>

@code {
    private AuthenticationResult token;
    private List<BookedResource> ResourceList { get; set; }
    private string CurrentToken { get; set; }
    private DateTime CurrentDate = DateTime.Now;

    View CurrentView = View.Agenda;

    List<Appointment> DataSource = new List<Appointment>
{
        new Appointment { Id = 1, Subject = "Paris", StartTime = new DateTime(2020, 2, 13, 11, 0, 0) , EndTime = new DateTime(2020, 2, 13, 14, 0, 0) },
        new Appointment { Id = 2, Subject = "Germany", StartTime = new DateTime(2020, 2, 15, 10, 0, 0) , EndTime = new DateTime(2020, 2, 15, 12, 0, 0) },
        new Appointment { Id = 1, Subject = "Warshawa", StartTime = new DateTime(2020, 2, 12, 11, 0, 0) , EndTime = new DateTime(2020, 2, 12, 14, 0, 0) },
        new Appointment { Id = 2, Subject = "London", StartTime = new DateTime(2020, 2, 14, 14, 0, 0) , EndTime = new DateTime(2020, 2, 14, 16, 0, 0) }

    };

    public class Appointment //ta
    {
        public int Id { get; set; }
        public string Subject { get; set; }
        public string Location { get; set; }
        public DateTime StartTime { get; set; }
        public DateTime EndTime { get; set; }
        public string Description { get; set; }

        public bool IsAllDay { get; set; }
        public string RecurrenceRule { get; set; }
        public string RecurrenceException { get; set; }
        public Nullable<int> RecurrenceID { get; set; }
    }
}
